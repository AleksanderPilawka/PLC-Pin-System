//## 

// Marker for when all the inputs are off
if( [I0000] == 0 && [I0001] == 0 && [I0002] == 0 && [I0003] == 0 && [I0004] == 0 && [I0005] == 0 && [I0006] == 0 && [I0007] == 0 && [I0010] == 0 && [I0012] == 0 ) { SET([M0100]); }
else { RST([M0100]); }


if( [M0017] == 0 )
{
// only 1 section, compared to 4-12 in previous versions
if( [I0011] == 1 && [I0013] == 0 ) { [D0000] = 1; [D0010] = 0; [D0011] = 0; [D0012] = 0; [D0013] = 0; }
if( [I0000] == 1 ) { [D0001] = 1; }
if( [I0001] == 1 ) { [D0001] = 2; }
if( [I0002] == 1 ) { [D0001] = 3; }
if( [I0003] == 1 ) { [D0001] = 4; }
if( [I0004] == 1 ) { [D0001] = 5; }
if( [I0005] == 1 ) { [D0001] = 6; }
if( [I0006] == 1 ) { [D0001] = 7; }
if( [I0007] == 1 ) { [D0001] = 8; }
if( [I0010] == 1 ) { [D0001] = 9; }
if( [I0012] == 1 ) { [D0001] = 0; }
switch([D0000]) 
{
case 0:
if( [M0017] == 0 ) { [D0000] = 1; [D0001] = 10;  SET([M0015]); [D0000] = 1; [D0010] = 0; [D0011] = 0; [D0012] = 0; [D0013] = 0; }break;

// Digit 1
case 1:
SET([M0015]);
if( [M0014] == 1 || [M0016] == 1 ) { RST([M0015]); }
if( [D0001] < 10  && [M0100] == 1) { RST([Q0000]); RST([Q0001]); [D0010] = [D0001]; [D0001] = 10; [D0000] = 2; }break;

// Digit 2
case 2:
if( [D0001] < 10  && [M0100] == 1) { [D0011] = [D0001]; [D0001] = 10; [D0000] = 3; }break;

// Digit 3
case 3:
if( [D0001] < 10  && [M0100] == 1) { [D0012] = [D0001]; [D0001] = 10; [D0000] = 4; }break;

// Digit 4
case 4:
if( [D0001] < 10  && [M0100] == 1) { [D0013] = [D0001]; [D0001] = 10; [D0000] = 5; }break;

// Req
case 5:
if( [M0015] == 1 ) { [D0000] = 6; }
if( [M0016] == 1 ) { [D0000] = 7; }
if( [M0014] == 1 && [I0013] == 1 && [I0011] == 0 ) {
if( [D0010] == [D0100] && [D0011] == [D0101] && [D0012] == [D0102] && [D0013] == [D0103]) { RST([M0014]); SET([M0015]); [D0002] = 0; SET([M0101]); [D0000] = 0; }
else { [D0002] = [D0002] + 1; SET([M0102]); [D0000] = 0; }}break;

// Setting
case 6:
if( [I0013] == 1 && [I0011] == 0 && [M0015] == 1 ) { RST([M0015]); [D0100] = [D0010]; [D0101] = [D0011]; [D0102] = [D0012]; [D0103] = [D0013]; SET([M0103]); SET([M0101]); [D0000] = 0; }
if( [M0103] == 1 ) { [D0001] = 10; RST([M0103]); SET([M0016]); RST([M0015]); [D0000] = 0; }break;

// Accessing
case 7:
if( [I0013] == 1 && [I0011] == 0 && [M0100] == 1) {
if( [D0010] == [D0100] && [D0011] == [D0101] && [D0012] == [D0102] && [D0013] == [D0103]) { [D0000] = 0; [D0002] = 0; SET([M0101]); }
else { [D0002] = [D0002] + 1; SET([M0102]); [D0000] = 0; }}break;}
if( [I0013] == 1 && [I0011] == 1 ) { SET([M0014]); RST([M0015]); RST([M0016]); [D0000] = 0; } }

// More Compact version of the same flickering as previous versions
if( [TC0000] % 10 == 5 ) { SET([Q0001]); }
if( [TC0000] % 10 == 0 ) { RST([Q0001]); }
if( [TC0001] % 10 == 5 ) { SET([Q0000]); }
if( [TC0001] % 10 == 0 ) { RST([Q0000]); }

if( [TC0002] == 0 ) { [D0002] = 0; }
